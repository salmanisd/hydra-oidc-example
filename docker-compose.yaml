# This docker-compose file can be used to bring up an example instance of oauth2-proxy
# for manual testing and exploration of features.
# Alongside OAuth2-Proxy, this file also starts ORY hydra to act as the OIDC provider,
# werther as a login ui/ldap client, nginx as a reverse proxy
#
# Access one of the following URLs to initiate a login flow:
#    - http://oauth2-proxy.localhost
#
# The OAuth2 Proxy itself is hosted at http://oauth2-proxy.oauth2-proxy.localhost
#
# Note, the above URLs should work with Chrome, but you may need to add hosts
# entries for other browsers
#    127.0.0.1 oauth2-proxy.localhost
#    127.0.0.1 oauth2-proxy.oauth2-proxy.localhost
#    127.0.0.1 hydra.localhost

version: '3.0'
services:
    oauth2-proxy:
        image: quay.io/oauth2-proxy/oauth2-proxy:v6.0.0
        command: --config /oauth2-proxy-nginx.cfg
        hostname: oauth2-proxy
        volumes:
            - "./oauth2-proxy-nginx.cfg:/oauth2-proxy-nginx.cfg"
        restart: unless-stopped
        ports:
            - "4180:4180"
        depends_on:
            - hydra-client
        networks:
            - hydra-net
            - oauth2-prx-net
    nginx:
        container_name: nginx
        image: nginx:1.18
        ports:
            - 80:80/tcp
        hostname: nginx
        volumes:
            - "./nginx.conf:/etc/nginx/conf.d/default.conf"
        depends_on:
            - oauth2-proxy
        networks:
            - oauth2-prx-net
    hydra-client:
        image: oryd/hydra:v1.0.0-rc.12
        environment:
            HYDRA_ADMIN_URL: http://hydra.localhost:4445
        command:
            - clients
            - create
            - --skip-tls-verify
            - --id
            - oauth2-proxy
            - --secret
            - b2F1dGgyLXByb3h5LWNsaWVudC1zZWNyZXQK
            - --response-types
            - code
            - --grant-types
            - authorization_code
            - --scope
            - openid,profile,email
            - --callbacks
            - http://oauth2-proxy.oauth2-proxy.localhost/oauth2/callback
        networks:
            - hydra-net
        deploy:
            restart_policy:
                condition: none
        depends_on:
            - hydra
        healthcheck:
            test: ["CMD", "curl", "-f", "http://hydra.localhost:4445"]
            interval: 10s
            timeout: 10s
            retries: 10
    hydra:
        image: oryd/hydra:v1.0.0-rc.12
        environment:
            URLS_SELF_ISSUER: http://hydra.localhost:4444
            URLS_SELF_PUBLIC: http://hydra.localhost:4444
            URLS_LOGIN: http://localhost:8080/auth/login
            URLS_CONSENT: http://localhost:8080/auth/consent
            URLS_LOGOUT: http://localhost:8080/auth/logout
            WEBFINGER_OIDC_DISCOVERY_SUPPORTED_SCOPES: profile,email,phone
            WEBFINGER_OIDC_DISCOVERY_SUPPORTED_CLAIMS: name,family_name,given_name,nickname,email,phone_number
            DSN: memory
        command: serve all --dangerous-force-http
        networks:
            hydra-net:
              aliases: 
                - hydra.localhost
        ports:
            - "4444:4444"
            - "4445:4445"
        deploy:
            restart_policy:
                condition: on-failure
        depends_on:
            - werther
        hostname: hydra
    werther:
        image: icoreru/werther:v1.0.0
        environment:
            WERTHER_IDENTP_HYDRA_URL: http://hydra.localhost:4445
            WERTHER_LDAP_ENDPOINTS: ldap:389
            WERTHER_LDAP_BINDDN: cn=admin,dc=example,dc=com
            WERTHER_LDAP_BINDPW: password
            WERTHER_LDAP_BASEDN: "dc=example,dc=com"
            WERTHER_LDAP_ROLE_BASEDN: "ou=AppRoles,dc=example,dc=com"
        networks:
            - hydra-net
        ports:
            - "8080:8080"
        deploy:
            restart_policy:
                condition: on-failure
        depends_on:
            - ldap
    ldap:
        image: pgarrett/ldap-alpine
        volumes:
            - "./ldap.ldif:/ldif/ldap.ldif"
        networks:
            - hydra-net
        ports:
            - "389:389"
        deploy:
            restart_policy:
                condition: on-failure
    consent:
        image: oryd/hydra-login-consent-node:v1.1.1
        ports:
            - "3000:3000"
networks:
    hydra-net:
    oauth2-prx-net:
